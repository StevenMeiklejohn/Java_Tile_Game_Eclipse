package com.codeclan.entities;

import java.awt.Graphics;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Random;

import com.codeclan.Handler;
import com.codeclan.entities.creatures.AnimatedRock1;
import com.codeclan.entities.creatures.AnimatedRock2;
import com.codeclan.entities.creatures.Creature;
import com.codeclan.entities.creatures.Player;
import com.codeclan.entities.statics.StaticAnimatedExplosion1;
import com.codeclan.entities.statics.StaticAnimatedExplosion2;
import com.codeclan.entities.statics.StaticAnimatedExplosion3;
import com.codeclan.entities.statics.StaticAnimatedLaser1;

public class RockManager {
	

	private AnimatedRock1 rock1;
	private AnimatedRock2 rock2;
	
	
	private ArrayList<AnimatedRock1> rocks;

	
//	import comparator (and associated methods) to allow us to sort the render oredr of entity array list.
	private Comparator<AnimatedRock1> renderSorter = new Comparator<AnimatedRock1>(){

		@Override
		public int compare(AnimatedRock1 a, AnimatedRock1 b) {
			if(a.getY() + a.getHeight() < b.getY() + b.getHeight())
				return -1;
			return 1;
		}
		
	};
	
	public RockManager(){

		rocks = new ArrayList<AnimatedRock1>();


	}
	
	public void update(){
		for (int i = 0; i < rocks.size(); i++){
			Creature c = rocks.get(i);
//			System.out.println("Number of runs is " + e.getRuns());
//			if(e.getRuns() > 30){
//				entities.remove(e);
//			}
			c.update();
		}
		rocks.sort(renderSorter);
	}
	
	
	public void render(Graphics g){
		System.out.println("Rock Manager render is triggered");
		for(AnimatedRock1 r : rocks){
			r.render(g);
			if(r.x < 0 || r.x > 660 || r.y < 0 || r.y > 660)
				r.die();
		}
	}
	
	
	
	public boolean getIsActive(){
		return this.getIsActive();
	}
	


	public void addCreature(AnimatedRock1 r){

		rocks.add(r);

	}
	
	public void removeCreature(Creature c){
		creatures.remove(c);
	}
	
	public ArrayList<Creature> getCreatures() {
		return creatures;
	}

	public int size() {
		// TODO Auto-generated method stub
		return creatures.size();
	}
	

	
	

	

}
