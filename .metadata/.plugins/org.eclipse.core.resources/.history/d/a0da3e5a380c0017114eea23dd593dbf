package com.codeclan.entities.statics;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;

import com.codeclan.Handler;
import com.codeclan.gfx.Animation;
import com.codeclan.gfx.Assets;
import com.codeclan.tilegame.tiles.Tile;

public class StaticAnimatedLaser1 extends StaticEntity {
	
//	Animation
	private Animation anim;
	protected int health;
	
	public StaticAnimatedLaser1(Handler handler, float x, float y){
		super(handler, x, y, Tile.TILE_WIDTH * 18, Tile.TILE_HEIGHT);
// 		setup bounding box.	
//		bounding box co-ords relative to entity 0, 0.
		bounds.x = 0;
		bounds.y = 0;
//		size of bounding box inside player tile.
		bounds.width = 300;
		bounds.height = 19;
		anim = new Animation(50, Assets.laser1_ani);
		
	}

	@Override
	public void update() {
//		Animation
		anim.update();
	}
	
	
	@Override
	public void die() {
		System.out.println("StaticAnimatedLaser1 destroyed");
	}

	@Override
	public void render(Graphics g) {
//		use casting to convert int variable to float (as defined by entity)
		g.drawImage(getCurrentAnimationFrame(), 
				(int) (x - handler.getGameCamera().getxOffset()), 
				(int) (y - handler.getGameCamera().getyOffset()), width, height, null);
//		g.setColor(Color.red);
//		g.fillRect((int) (x + bounds.x - handler.getGameCamera().getxOffset()), 
//				(int) (y + bounds.y - handler.getGameCamera().getyOffset()),
//				bounds.width, bounds.height);
	}
	
	
	public BufferedImage getCurrentAnimationFrame(){
		return anim.getCurrentFrame();
	}

}
